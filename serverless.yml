service: kactus-api

custom:
  usersTableName: ${opt:stage, self:provider.stage}-dynamo-kactus-users
  orgsTableName: ${opt:stage, self:provider.stage}-kactus-orgs

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  environment:
    USERS_TABLE_NAME: ${self:custom.usersTableName}
    ORGS_TABLE_NAME: ${self:custom.orgsTableName}
    GITHUB_CLIENT_ID: ${file(./config.${self:provider.stage}.yml):GITHUB_CLIENT_ID}
    GITHUB_CLIENT_SECRET: ${file(./config.${self:provider.stage}.yml):GITHUB_CLIENT_SECRET}
    GITHUB_HOST: ${file(./config.${self:provider.stage}.yml):GITHUB_HOST}
    GITHUB_PORT: ${file(./config.${self:provider.stage}.yml):GITHUB_PORT}
    GITHUB_PATH: ${file(./config.${self:provider.stage}.yml):GITHUB_PATH}
    GITHUB_METHOD: ${file(./config.${self:provider.stage}.yml):GITHUB_METHOD}
    STRIPE_SECRET: ${file(./config.${self:provider.stage}.yml):STRIPE_SECRET}
    STRIPE_ENDPOINT_SECRET: ${file(./config.${self:provider.stage}.yml):STRIPE_ENDPOINT_SECRET}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "apigateway:POST"
      Resource:
        - arn:aws:dynamodb:*:*:table/${self:custom.usersTableName}
        - arn:aws:dynamodb:*:*:table/${self:custom.orgsTableName}
        - "arn:aws:apigateway:*"

functions:
  githubOAuth:
    handler: api/githubOAuth.handler
    events:
      - http:
          path: /oauth/github/authenticate
          method: get
          cors: true
  coupon:
    handler: api/coupon.handler
    events:
      - http:
          path: /coupon/{coupon}
          method: get
          cors: true
  unlock:
    handler: api/users/unlock.handler
    timeout: 30
    events:
      - http:
          path: /unlock
          method: post
          cors: true
  unsubscribe:
    handler: api/users/unsubscribe.handler
    timeout: 30
    events:
      - http:
          path: /unsubscribe
          method: delete
          cors: true
  checkUnlocked:
    handler: api/users/checkUnlocked.handler
    events:
      - http:
          path: /checkUnlocked
          method: put
          cors: true
  getOne:
    handler: api/users/getOne.handler
    events:
      - http:
          path: /user
          method: get
          cors: true
  unlockOrg:
    handler: api/orgs/unlock.handler
    timeout: 30
    events:
      - http:
          path: /orgs/unlock
          method: post
  addMemberToOrg:
    handler: api/orgs/addMember.handler
    timeout: 30
    events:
      - http:
          path: /orgs/member
          method: post
          cors: true
  removeMemberFromOrg:
    handler: api/orgs/removeMember.handler
    timeout: 30
    events:
      - http:
          path: /orgs/member
          method: delete
          cors: true
  stripeWebhook:
    handler: webhook/stripe.handler
    timeout: 30
    events:
      - http:
          path: /webhook/stripe
          method: post
          cors: true
  exceptionLogger:
    handler: usage/exception.handler
    memorySize: 128
    events:
      - http:
          path: /usage/exception
          method: post
          cors: true
  statsLogger:
    handler: usage/stats.handler
    memorySize: 128
    events:
      - http:
          path: /usage
          method: post
          cors: true

resources:
  Resources:
    KactusUsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: githubId
            AttributeType: S
        KeySchema:
          -
            AttributeName: githubId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.usersTableName}
    KactusOrgsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.orgsTableName}
