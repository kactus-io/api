service: kactus-api

custom:
  tableName: ${opt:stage, self:provider.stage}-dynamo-kactus-users

provider:
  name: aws
  runtime: nodejs6.10
  profile: perso
  region: eu-west-1
  environment:
    TABLE_NAME: ${self:custom.tableName}
    STRIPE_SECRET: ${env:STRIPE_SECRET}
    STRIPE_ENDPOINT_SECRET: ${env:STRIPE_ENDPOINT_SECRET}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "apigateway:POST"
      Resource:
        - arn:aws:dynamodb:*:*:table/${self:custom.tableName}
        - "arn:aws:apigateway:*"

functions:
  coupon:
    handler: api/coupon.handler
    events:
      - http:
          path: /coupon/{coupon}
          method: get
          cors: true
          integration: lambda
          parameters:
            path:
              coupon: true
            querystring:
              requestId: true
            template:
              application/json: >
                {
                  "coupon": "$input.params('coupon')",
                  "requestId": "$input.params('requestId')"
                }
  unlock:
    handler: api/unlock.handler
    timeout: 60
    events:
      - http:
          path: /unlock
          method: post
          cors: true
          integration: lambda
          request:
            template:
              application/json: >
                {
                  "body": "$util.escapeJavaScript($input.json('$'))"
                }
  login:
    handler: api/login.handler
    events:
      - http:
          path: /login
          method: post
          cors: true
          integration: lambda
          request:
            template:
              application/json: >
                {
                  "body": "$util.escapeJavaScript($input.json('$'))"
                }
  getOne:
    handler: api/getOne.handler
    events:
      - http:
          path: /{githubId}
          method: get
          cors: true
          integration: lambda
          request:
            parameters:
              path:
                githubId: true
            template:
              application/json: >
                {
                  "githubId": "$input.params('githubId')"
                }
  stripeWebhook:
    handler: webhook/stripe.handler
    timeout: 60
    events:
      - http:
          path: /webhook/stripe
          method: post
          cors: true
          integration: lambda
          request:
            template:
              application/json: >
                {
                  "body": "$util.escapeJavaScript($input.body)",
                  "stripeSignature" : "$input.params('Stripe-Signature')"
                }
  exceptionLogger:
    handler: usage/exception.handler
    memorySize: 128
    events:
      - http:
          path: /usage/exception
          method: post
          cors: true
          integration: lambda
  statsLogger:
    handler: usage/stats.handler
    memorySize: 128
    events:
      - http:
          path: /usage
          method: post
          cors: true
          integration: lambda

resources:
  Resources:
    KactusUsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: githubId
            AttributeType: S
        KeySchema:
          -
            AttributeName: githubId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
